{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fswiss\fcharset0 Helvetica-Oblique;
\f3\fmodern\fcharset0 Courier;\f4\fmodern\fcharset0 Courier-Bold;\f5\froman\fcharset0 Times-Roman;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue233;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c0\c0\c93333;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid201\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\paperw11900\paperh16840\margl1440\margr1440\vieww28300\viewh17200\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0

\f0\b\fs28 \cf0 \ul \ulc0 GraphQLWFS Function\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf0 \ulc0 What does the function do?\
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 \ulnone {\listtext	\uc0\u8226 	}The function, 
\f2\i def graphqlwfs():, 
\f1\i0 goes into a WFS website, and converts the data from GML format into GeoJSON format. \
{\listtext	\uc0\u8226 	}The initial parameter is the url of the WFS, which returns the request GetCapabilities. (&request=GetCapabilities)\
{\listtext	\uc0\u8226 	}Get Capabilities will return a list of all the different feature types.\
{\listtext	\uc0\u8226 	}Inside the function, there is another constant called 
\f2\i filterRequest. 
\f1\i0 This contains 2 URIs, the typename, which is the name of the Feature Type in your WFS, and outputformat, which is geoJSON. This is where the WFS is converted into geoJSON format.\
{\listtext	\uc0\u8226 	}If you want a different feature type, you can do this by looking at the WFS for GetCapabilities. The 
\f2\i typename
\f1\i0  value will be the value inside the 
\f2\i wfs: Name 
\f1\i0 tag, which itself is nested inside the 
\f2\i wfs: FeatureType
\f1\i0  tag. An example structure is shown below, with the Feature Type highlighted in bold and underlined. This is the value you want to copy and paste into your filterRequest constant:\
\pard\tx0\pardeftab720\sl300\partightenfactor0

\f3\fs26 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 																<wfs:FeatureType>\
																	<wfs:Name>
\f4\b \ul osfeatures:Sites_FunctionalSite
\f3\b0 \ulnone </wfs:Name>\
																	<wfs:Title>Sites_FunctionalSite</wfs:Title>\
																	<wfs:DefaultCRS>urn:ogc:def:crs:EPSG::27700</wfs:DefaultCRS>\
																	<ows:WGS84BoundingBox>\
																		<ows:LowerCorner>-8.114934309622171 49.88031284204585</ows:LowerCorner>\
																		<ows:UpperCorner>2.678360052493208 60.7648749882926</ows:UpperCorner>\
																	</ows:WGS84BoundingBox>\
																</wfs:FeatureType>\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0

\f1\fs24 \cf0 \kerning1\expnd0\expndtw0 \ul \ulc0 \outl0\strokewidth0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \ulc0 			\ulnone This results in the filterRequest value being: 
\f2\i filterRequest = "&typenames=osfeatures:Sites_FunctionalSite&outputformat=geoJSON\'94.\
\
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls2\ilvl0
\f1\i0 \cf0 {\listtext	\uc0\u8226 	}There is an additional constant called newUrl. The GeoJSON outputformat only works when the request is GetFeature. Therefore, the newURl does a str.replace, replacing the GetCapabilities request with a GetFeature request, and adds the filterRequest string to the url too, which returns in GeoJSON format.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \ul \ulc0 How to use the function?\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \ulnone  \
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls3\ilvl0\cf0 {\listtext	1.	}On your terminal, type \'93./local.sh\'94\
{\listtext	2.	}On your browser, type {\field{\*\fldinst{HYPERLINK "http://127.0.0.1:5000/"}}{\fldrslt \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 \outl0\strokewidth0 \strokec3 http://127.0.0.1:5000/}}
\f0\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3  
\f1\b0 This is where your output will be returned in geoJSON format.
\f5 \ul \
\ls3\ilvl0
\f1 \cf0 \kerning1\expnd0\expndtw0 \ulnone \outl0\strokewidth0 {\listtext	3.	}If you want a different feature, copy and paste the value of the initial url parameter, and select your chosen feature type, in the way described above.\
}